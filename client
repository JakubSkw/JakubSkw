from __future__ import unicode_literals

from kivy.support import install_twisted_reactor

install_twisted_reactor()

# A Simple Client that send messages to the Echo Server
from twisted.internet import reactor, protocol


class EchoClient(protocol.Protocol):
    def connectionMade(self):
        self.factory.app.on_connection(self.transport)

    def dataReceived(self, data):
        self.factory.app.print_message(data.decode('utf-8'))


class EchoClientFactory(protocol.ClientFactory):
    protocol = EchoClient

    def __init__(self, app):
        self.app = app

    def startedConnecting(self, connector):
        self.app.print_message('Started to connect.')

    def clientConnectionLost(self, connector, reason):
        self.app.print_message('Lost connection.')

    def clientConnectionFailed(self, connector, reason):
        self.app.print_message('Connection failed.')


from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.uix.textinput import TextInput
from kivy.uix.boxlayout import BoxLayout


# A simple kivy App, with a textbox to enter messages, and
# a large label to display all the messages received from
# the server
class TwistedClientApp(App):
    connection = None
    textbox = None
    label = None

    def build(self):
        root = self.setup_gui()
        self.connect_to_server()
        return root

    def setup_gui(self):
        self.degrees = 360
        self.main_label = Label(text="0")

        self.leftbtn = Button(text = "Left", size_hint=(.9, .2),on_press = self.left)
        self.leftbtn.bind(on_text_validate=self.left)

        self.rightbtn = Button(text = "Right", size_hint=(.9, .2),on_press = self.right)
        self.rightbtn.bind(on_text_validate=self.right)

        self.label = Label(text='connecting...\n')

        layout = BoxLayout(orientation='horizontal')
        layout.add_widget(self.label)
        layout.add_widget(self.main_label)
        layout.add_widget(self.leftbtn)
        layout.add_widget(self.rightbtn)
        return layout

    def connect_to_server(self):
        reactor.connectTCP('localhost', 8000, EchoClientFactory(self))

    def on_connection(self, connection):
        self.print_message("Connected successfully!")
        self.connection = connection

    def left(self, event):
        self.degrees -= 1

        if (self.degrees == -1):
            self.degrees = 359

        if (self.degrees == 0):
            self.degrees = 360

        self.main_label.text = str(self.degrees)
        msg = "left"
        if msg and self.connection:
            self.connection.write(msg.encode('utf-8'))

    def right(self, event):
        self.degrees += 1

        if (self.degrees == 361):
            self.degrees = 1

        self.main_label.text = str(self.degrees)
        msg = "right"
        if msg and self.connection:
            self.connection.write(msg.encode('utf-8'))

    def print_message(self, msg):
        self.label.text += "{}\n".format(msg)
        pass


if __name__ == '__main__':
    TwistedClientApp().run()
